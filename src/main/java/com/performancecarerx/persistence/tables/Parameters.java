/**
 * This class is generated by jOOQ
 */
package com.performancecarerx.persistence.tables;


import com.performancecarerx.persistence.Keys;
import com.performancecarerx.persistence.Public;
import com.performancecarerx.persistence.tables.records.ParametersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Parameters extends TableImpl<ParametersRecord> {

    private static final long serialVersionUID = 563323618;

    /**
     * The reference instance of <code>public.parameters</code>
     */
    public static final Parameters PARAMETERS = new Parameters();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ParametersRecord> getRecordType() {
        return ParametersRecord.class;
    }

    /**
     * The column <code>public.parameters.name</code>.
     */
    public final TableField<ParametersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.parameters.value</code>.
     */
    public final TableField<ParametersRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.parameters</code> table reference
     */
    public Parameters() {
        this("parameters", null);
    }

    /**
     * Create an aliased <code>public.parameters</code> table reference
     */
    public Parameters(String alias) {
        this(alias, PARAMETERS);
    }

    private Parameters(String alias, Table<ParametersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Parameters(String alias, Table<ParametersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ParametersRecord> getPrimaryKey() {
        return Keys.PARAMETERS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ParametersRecord>> getKeys() {
        return Arrays.<UniqueKey<ParametersRecord>>asList(Keys.PARAMETERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Parameters as(String alias) {
        return new Parameters(alias, this);
    }

    /**
     * Rename this table
     */
    public Parameters rename(String name) {
        return new Parameters(name, null);
    }
}
