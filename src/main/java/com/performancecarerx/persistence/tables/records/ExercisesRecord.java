/**
 * This class is generated by jOOQ
 */
package com.performancecarerx.persistence.tables.records;


import com.performancecarerx.persistence.tables.Exercises;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExercisesRecord extends UpdatableRecordImpl<ExercisesRecord> implements Record4<Integer, String, String, Boolean> {

    private static final long serialVersionUID = -130053689;

    /**
     * Setter for <code>performancecarerx_db.exercises.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>performancecarerx_db.exercises.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>performancecarerx_db.exercises.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>performancecarerx_db.exercises.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>performancecarerx_db.exercises.exercise_group_key_name</code>.
     */
    public void setExerciseGroupKeyName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>performancecarerx_db.exercises.exercise_group_key_name</code>.
     */
    public String getExerciseGroupKeyName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>performancecarerx_db.exercises.is_deleted</code>.
     */
    public void setIsDeleted(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>performancecarerx_db.exercises.is_deleted</code>.
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Exercises.EXERCISES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Exercises.EXERCISES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Exercises.EXERCISES.EXERCISE_GROUP_KEY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Exercises.EXERCISES.IS_DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getExerciseGroupKeyName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExercisesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExercisesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExercisesRecord value3(String value) {
        setExerciseGroupKeyName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExercisesRecord value4(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExercisesRecord values(Integer value1, String value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExercisesRecord
     */
    public ExercisesRecord() {
        super(Exercises.EXERCISES);
    }

    /**
     * Create a detached, initialised ExercisesRecord
     */
    public ExercisesRecord(Integer id, String name, String exerciseGroupKeyName, Boolean isDeleted) {
        super(Exercises.EXERCISES);

        set(0, id);
        set(1, name);
        set(2, exerciseGroupKeyName);
        set(3, isDeleted);
    }
}
