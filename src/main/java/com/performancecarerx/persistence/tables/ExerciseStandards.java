/**
 * This class is generated by jOOQ
 */
package com.performancecarerx.persistence.tables;


import com.performancecarerx.persistence.Keys;
import com.performancecarerx.persistence.Public;
import com.performancecarerx.persistence.tables.records.ExerciseStandardsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseStandards extends TableImpl<ExerciseStandardsRecord> {

    private static final long serialVersionUID = -90438241;

    /**
     * The reference instance of <code>public.exercise_standards</code>
     */
    public static final ExerciseStandards EXERCISE_STANDARDS = new ExerciseStandards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExerciseStandardsRecord> getRecordType() {
        return ExerciseStandardsRecord.class;
    }

    /**
     * The column <code>public.exercise_standards.user_id</code>.
     */
    public final TableField<ExerciseStandardsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.exercise_standards.exercise_id</code>.
     */
    public final TableField<ExerciseStandardsRecord, Integer> EXERCISE_ID = createField("exercise_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.exercise_standards.reps</code>.
     */
    public final TableField<ExerciseStandardsRecord, Integer> REPS = createField("reps", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.exercise_standards.weight</code>.
     */
    public final TableField<ExerciseStandardsRecord, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.exercise_standards.created_on_dttm</code>.
     */
    public final TableField<ExerciseStandardsRecord, Timestamp> CREATED_ON_DTTM = createField("created_on_dttm", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>public.exercise_standards</code> table reference
     */
    public ExerciseStandards() {
        this("exercise_standards", null);
    }

    /**
     * Create an aliased <code>public.exercise_standards</code> table reference
     */
    public ExerciseStandards(String alias) {
        this(alias, EXERCISE_STANDARDS);
    }

    private ExerciseStandards(String alias, Table<ExerciseStandardsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExerciseStandards(String alias, Table<ExerciseStandardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ExerciseStandardsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExerciseStandardsRecord, ?>>asList(Keys.EXERCISE_STANDARDS__FK_EXERCISE_STANDARDS_USER_IDX, Keys.EXERCISE_STANDARDS__FK_EXERCISE_STANDARDS_EXERCISE_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExerciseStandards as(String alias) {
        return new ExerciseStandards(alias, this);
    }

    /**
     * Rename this table
     */
    public ExerciseStandards rename(String name) {
        return new ExerciseStandards(name, null);
    }
}
